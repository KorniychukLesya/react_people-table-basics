{"version":3,"sources":["pages/PeoplePage.tsx","components.tsx/PageNavLink.tsx","components.tsx/Navbar.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","components.tsx/PersonLink.tsx","components.tsx/PeopleTableInfo.tsx","components.tsx/PeopleTableList.tsx","api.ts","App.tsx","index.tsx"],"names":["TextError","PageNavLink","to","text","className","isActive","classNames","Navbar","role","HomePage","Loader","PersonLink","person","slug","name","sex","PeopleTableInfo","curentPerson","findParent","onSelectedPerson","born","died","fatherName","motherName","findFatherHref","undefined","findMotherHref","PeopleTableList","persons","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useParams","useState","setPersons","isAdding","setIsAdding","None","textError","setTextError","useEffect","NoPeople","catch","Load","finally","find","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.756ee8a7.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { PeopleTableList } from '../components.tsx/PeopleTableList';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nenum TextError {\n  None,\n  Load,\n  NoPeople,\n}\n\nexport const PeoplePage = () => {\n  const { slug } = useParams();\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [textError, setTextError] = useState(TextError.None);\n\n  useEffect(() => {\n    setIsAdding(true);\n    setTextError(TextError.None);\n    getPeople()\n      .then(person => {\n        setPersons(person);\n        if (person === undefined) {\n          setTextError(TextError.NoPeople);\n        }\n      })\n      .catch(() => setTextError(TextError.Load))\n      .finally(() => setIsAdding(false));\n  }, []);\n\n  const findParent = (name: string) => {\n    return persons.find(person => person.name === name);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isAdding && <Loader />}\n          {textError === TextError.Load\n          && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n\n          )}\n\n          {(isAdding && textError === TextError.NoPeople)\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          <PeopleTableList\n            persons={persons}\n            findParent={findParent}\n            onSelectedPerson={slug}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    name,\n    sex,\n  } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  person: Person;\n  findParent: (name: string) => Person | undefined;\n  onSelectedPerson: string | undefined;\n}\nexport const PeopleTableInfo: React.FC<Props> = ({\n  person,\n  findParent,\n  onSelectedPerson,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n\n  } = person;\n\n  const isSelctedPerson = (curentPerson: Person) => (\n    curentPerson.slug === onSelectedPerson\n  );\n\n  const findFatherHref = fatherName\n    ? findParent(fatherName)\n    : undefined;\n\n  const findMotherHref = motherName\n    ? findParent(motherName)\n    : undefined;\n\n  return (\n    <tr\n      key={name}\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': isSelctedPerson(person) },\n      )}\n    >\n      <td>\n        <PersonLink\n          person={person}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      {findMotherHref\n        ? (\n          <td>\n            <PersonLink\n              person={findMotherHref}\n            />\n          </td>\n        ) : (\n          <td>\n            {motherName || '-'}\n          </td>\n        )}\n      {findFatherHref\n        ? (\n          <td>\n            <PersonLink\n              person={findFatherHref}\n            />\n          </td>\n        ) : (\n          <td>\n            {fatherName || '-'}\n          </td>\n        )}\n    </tr>\n  );\n};\n","import { Person } from '../types';\nimport { PeopleTableInfo } from './PeopleTableInfo';\n\ninterface Props {\n  persons: Person[];\n  findParent: (name: string) => Person | undefined;\n  onSelectedPerson: string | undefined;\n}\n\nexport const PeopleTableList: React.FC<Props> = ({\n  persons,\n  findParent,\n  onSelectedPerson,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {persons.map(person => (\n          <PeopleTableInfo\n            person={person}\n            findParent={findParent}\n            onSelectedPerson={onSelectedPerson}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components.tsx/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <>\n      <div data-cy=\"app\">\n\n        <Navbar />\n        <main className=\"section\">\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n              <Route path=\"/people\">\n                <Route index element={<PeoplePage />} />\n                <Route path=\":slug\" element={<PeoplePage />} />\n              </Route>\n\n              <Route\n                path=\"*\"\n                element={<h1 className=\"title\">Page not found</h1>}\n              />\n            </Routes>\n          </div>\n        </main>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}